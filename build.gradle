buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE")
        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.6.3"
        classpath 'io.spring.gradle:dependency-management-plugin:0.6.0.RELEASE'
    }
}


group 'org.wallerlab'
version '0.1-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'


//mainClassName = "org.wallerlab.dso.Main"


repositories {
    mavenCentral()
    maven { url "https://m2.neo4j.org" }
    maven { url "https://repo.spring.io/libs-release" }
    maven { url "https://repo.spring.io/libs-snapshot" }
}


sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencyManagement {
    imports {
        mavenBom 'io.spring.platform:platform-bom:2.0.6.RELEASE'
    }
}


dependencies {

    compile 'org.springframework.boot:spring-boot-starter'
    compile 'org.springframework.boot:spring-boot-starter-batch'
    compile 'org.springframework.batch:spring-batch-integration'

    testCompile 'org.spockframework:spock-core:1.1-groovy-2.4-rc-1'
    testCompile 'org.springframework:spring-test'
    testCompile 'org.spockframework:spock-spring:1.1-groovy-2.4-rc-1'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.codehaus.groovy:groovy-all:2.4.7'
    testCompile 'junit:junit'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

sourceSets {
    integTest {
        groovy {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integTest/groovy')
        }
        resources.srcDir file('src/integTest/resources')
    }
}

configurations {
    integTestCompile.extendsFrom testCompile
    integTestRuntime.extendsFrom testRuntime
}

task integTest(type: Test) {
    testClassesDir = sourceSets.integTest.output.classesDir
    classpath = sourceSets.integTest.runtimeClasspath
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/pdbml/**'])
        })
    }
}

coveralls {
    sourceDirs = subprojects.sourceSets.main.allSource.srcDirs.flatten()
    jacocoReportPath = "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
}

jar {
    baseName = 'Pdb2Neo4j'
    version =  '0.0.1'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.14'
}
